services:
  app:
    build: .
    container_name: stylistiq_be
    ports:
      - '127.0.0.1:3099:3000'
    env_file:
      - .env.prod
    environment:
      NODE_ENV: prod
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      # ELASTIC_SEARCH_URL: ${ELASTIC_SEARCH_URL}
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - .:/app
    command: |
      sh -c "
        npm run start:dev
      "

  mysql:
    image: mysql:8.0
    container_name: mysql_stylistiq
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - '127.0.0.1:3310:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-uroot']
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 30s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.2
    container_name: elasticsearch_stylistiq
    environment:
      xpack.security.enabled: "false"
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "127.0.0.1:9382:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mysql_data:
  es_data:
